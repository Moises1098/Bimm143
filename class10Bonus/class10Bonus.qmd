---
title: "Class 11: Halloween Candy Mini-Project"
author: "Moises Gonzalez (A17579866)"
format: pdf
---
In today's class we will examine 538 Candy data and see if this helps us gain some more feeling for how PCA 

## 1. Importing candy data

```{r}
#load it up with read.csv()
candy <- read.csv("candy-data.csv", row.names=1)
head(candy)
```



> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

> Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```
> Q. What are these fruity candy?

We can use the ==
```{r}
rownames(candy[candy$fruity==1,])
```


## 2. How often does my favorite candy win?

```{r}
candy["Twix", ]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
#My favorite candy in the dataset would be a Airheads
candy["Air Head", ]$winpercent
```


> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent
```

> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

There is a useful skim() function in the skimr package that can help give you a quick overview of a given dataset. Let’s install this package and try it on our candy data.
```{r}
#install.packages("skimr") in the consel
library("skimr")
skim(candy)
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, the `winperecent` column seems to be on a 0:100 scale and the other appear to be on a 0:1 scale.

> Q7. What do you think a zero and one represent for the candy$chocolate column?

```{r}
table(candy$chocolate)
```

A zero here means the candy is not classified as containg chocolate and the one does.

> Q8. Plot a histogram of winpercent values

In base R graphics:
```{r}
hist(candy$winpercent)
```
with ggplot:
```{r}
library(ggplot2)
ggplot(candy) +
  aes(winpercent) +
  geom_histogram(bins=10)
```



> Q9. Is the distribution of winpercent values symmetrical?

The distribution of `winpercent` values is not symmetrical

> Q10. Is the center of the distribution above or below 50%?

The center of the distribution is below 50%

Below 50% with a mean:
```{r}
mean(candy$winpercent)
```

> Q11. On average is chocolate candy higher or lower ranked than fruit candy?

To answer this question I will need to: 

- "subset" (a.k.a "select", "filter") the candy dataset to just chocolate candy, 
- get their winpercet values,
- calculate the mean of these.

Then do the same for fruity candy and compare.
```{r}
#Filter to just chocolate rows
chocolate.candy <- candy[as.logical(candy$chocolate),] 

#Get their winpercent values
chocolate.winpercent <- chocolate.candy$winpercent

#Calculate their mean winpercent
mean(chocolate.winpercent)
```

Now do the same steps for fruity candy 
```{r}
#Filter to just fruity rows
fruity.candy <- candy[as.logical(candy$fruity),] 

#Get their winpercent values
fruity.winpercent <- fruity.candy$winpercent

#Calculate their mean winpercent
mean(fruity.winpercent)
```
Compare chocolate and fruity
```{r}
mean(chocolate.winpercent)
mean(fruity.winpercent)
```
On average chocolate candy (`r round(mean(chocolate.winpercent))`%) is ranked higher than fruit candy (`r round(mean(fruity.winpercent))`%).

> Q12. Is this difference statistically significant?

```{r}
t.test(chocolate.winpercent,fruity.winpercent)
```
It is statistically significant because there is a big gap between the two.

## 3. Overall Candy Rankings

There is a base R function called `sort()` for, guess what sorting vectors of input.
```{r}
x <- c(5, 2, 10)
sort(x)
#sort(x, decreasing = T)
```
The buddy function to `sort()` that is often more useful is called `order()`. It returns the "indices" of the input that would results in it being sorted.

```{r}
order(x)
x[order(x)]
```

> Q13. What are the five least liked candy types in this set?

I can order by `winpercent`
```{r}
ord <- order(candy$winpercent)
rownames(head(candy[ord,],5))
```

> Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
top <- order(candy$winpercent, decreasing = T)
rownames(head(candy[top,],5))
```

> Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```
> Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```

Adding colors to barplot
```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```
> Q17. What is the worst ranked chocolate candy?

Sixlets 

> Q18. What is the best ranked fruity candy?

Starburst

## 4. Taking a look at pricepercent

> Q. What is the the best candy for the least money?

```{r}
my_cols[as.logical(candy$fruity)] = "red"
```

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent) +
  geom_point(col=my_cols)
```

Add some labels

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text()
```
To deal with overlapping labels I can use the **geom_repel** package.

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=2, max.overlaps = 13)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

Reese's Peanut Butter cup

> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

The top 5 most expensive candy types in the dataset:
```{r}
top <- order(candy$pricepercent, decreasing = T)
rownames(head(candy[top,],5))
```
Nik L Nip is the least popular.

## 5. Exploring the correlation structure

Pearson correlation goes between -1 and +1 with zero indicating no correlation and values close to one being very high (ani) corrolated.

```{r}
library(corrplot)
cij <- cor(candy)
corrplot(cij)
```
> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity are anti-correlated.

> Q23. Similarly, what two variables are most positively correlated?

Chocolate and winpercent are the most positively correlated.

## 6. Principal Component Analysis

The base R function for PCA is called `prcomp()` and we can set "scale=TRUE/FALSE".

```{r}
pca <- prcomp(candy, scale=T)
summary(pca)
```
The main result of PCA - i.e. the new PC plot (projection of candy on our new PC axis) is contained in `pca$x`

```{r}
pc <- as.data.frame(pca$x)

ggplot(pc) +
  aes(PC1, PC2, label=rownames(pc)) +
  geom_point(col=my_cols) +
  geom_text_repel(col=my_cols, size=1.5, max.overlaps = 13)

```

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])

ggplot(my_data) + 
  aes(x=PC1, y=PC2, 
      size=winpercent/100,  
      text=rownames(my_data),
      label=rownames(my_data)) +
  geom_point(col=my_cols)
```


```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```


> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

The original variables of fruity, hard, and pluribus are picked up strongly by PC1 in the positive direction. It makes sense because the 3 are corrolated. 

